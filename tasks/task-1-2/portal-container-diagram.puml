@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml
AddRelTag("dashed", $lineStyle = DashedLine())
AddElementTag("db", $bgColor="#837ede", $borderColor="#4c46b0")



title Блок сервисов основного портала умного дома

Boundary(actors, "") {
    Person(user, "Пользователь")
    Person(support, "Поддержка")
    Person(tech, "Техник")
    Container(apps, "Web / Mobile \n Applications", "iOS/Android/Web", "")
    Rel(user, apps, " ")
   Rel(support, apps, " ")
   Rel(tech, apps, " ")

}


Boundary(iotHub, "IoT Hub", "IoT Core функции") {
    Deployment_Node(kafka, "Шина данных", "Apache Kafka", "MQTT топики")
    Container(deviceManagementService, "Device Management", "Java", "Информация об устройствах")
}

Boundary(proxy, "Entry point") {
    Container(authService, "Auth Service", "Keycloak")
    Container(apiGateway, "API Gateway", "Kong")
    apiGateway->authService
}

Boundary(portal, "«Тёплый дом» Portal") {

  Boundary(dataService_,"") {
     Container(dataService, "Device Data Processing", "Java", "Прием и обработка телеметрии")
     ContainerDb(dataDb, "Data DB", "ClickHouse", "TimeSeries база с телеметрией с устройств")
     Rel_D(dataService,dataDb,"SQL/JPA")
  }

    Boundary(userManagement_,"") {
       Container(userManagement, "User Management", "Java", "Регистрация пользователей, настройки аккаунта")
        ContainerDb(userDb, "Users DB", "MongoDb", "Пользователи, Их Home/Room, Связки Device->Home")
       Rel_D(userManagement,userDb," ")
    }

      Boundary(configurationService_,"") {
        Container(configurationService, "Device Configuration", "Java", "Управление настройками устройств")
        ContainerDb(configDb, "Config DB", "MongoDb", "Расписания, настройки, каталог моделей")
        Rel_D(configurationService,configDb, " ")
        }


    Container(notificationService, "Notification Service", "Java")
    Container(supportBFF, "Support BFF", "Java")
    Container(userPortalBFF, "User Portal BFF", "Java")

   userManagement -> notificationService : HTTP API



    }


}


Rel_U(userPortalBFF, deviceManagementService, "HTTP API")
Rel_U(configurationService, deviceManagementService, "HTTP API")

Rel_D(apiGateway, portal, "Маршрутизация HTTP")

kafka -> dataService : Поток данных телеметрии

Rel(apps, apiGateway, "REST API", "HTTP")





@enduml


